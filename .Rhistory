getwd
getwd()
setwd("C:/Users/Lucia/Documents/Arbeit/PIK_MA/Paper/Paper_MA/LaTeX_energies")
getwd()
knitr::opts_knit$set(root.dir = 'C:/Users/Lucia/Documents/Arbeit/PIK_MA/Paper/Paper_MA/LaTeX')
library(ggpubr)
carbon_int = seq(0, 0.500, by=0.020)
inventory = array(0L, dim = c(8,5, 26),
dimnames=list(c("Electricity","Heat","System_Expansion","Refinery",
"Methane", "By_Products","Electrolyser","CarbCapt(net)"),
c("SC", "EH", "OCM", "HO", "NG" ),
paste(carbon_int, "t_CO2/MWh")))
flows = inventory
flows["Electricity", "SC",] = 0.21 #MWh/kg
flows["Heat", "SC",] = 0.488 #kg meth/kg eth
flows["System_Expansion", "SC",] = 3.39 #MWH/kg th
flows["Refinery", "SC",] = 3.58 # kg naphtha / kg ethylene, Gabi
flows["Methane", "SC",] = 0.0571 #kg meth/kg eth
flows["By_Products", "SC",] = NA
flows["Electrolyser", "SC", ] = NA
flows["CarbCapt(net)", "SC",] = NA
flows[,"HO",] = flows[, "SC",]
flows[,"NG",] = flows[, "SC",]
flows["Electricity", "EH",] = 0.21 + 6.78 #MWh/kg
flows["Heat", "EH",] = NA #kg/kg
flows["System_Expansion", "EH",] = NA #MWH/kg
flows["Refinery", "EH",] = 3.58 # kg naphtha / kg ethylene
flows["Methane", "EH",] = 0.545 #kg/kg
flows["By_Products", "EH",] = NA
flows["Electrolyser", "EH",] = NA
flows["CarbCapt(net)", "EH",] = NA
flows["Electricity", "OCM", ] = 1.1 #MWh/kg
flows["Heat", "OCM", ] = NA #kg/kg
flows["System_Expansion", "OCM", ] =  2.462 #MWH/kg
flows["Refinery", "OCM", ] = NA
flows["Methane", "OCM", ] = 0.183 #kg/kg
flows["By_Products", "OCM", ] = 1
flows["Electrolyser", "OCM", ] = 32.2 #MWH/kg
flows["CarbCapt(net)", "OCM", ] = 4.64 #kg/kg ethylene
ef = inventory
for (i in 1:5)
ef["Electricity", i,] = carbon_int
ef["Heat",,] = 2.6 #kg/kg meth, taken from old cost caluclations, based on stochiometric combustion
#-> maybe better IPCC
#ef[,,"Heat_el"] = rem_carbon_e[,,"Carbon_Intensity|Gross (kg CO2/MWh)"]
for (i in 1:3)
ef["System_Expansion", i,] = carbon_int
ef["System_Expansion", "HO",] = 0.279 + 0.446/13.4
ef["System_Expansion", "NG",] = 0.202 + 0.478/11.2 #gabi value converted to mwh with ncv from ipcc
ef["Refinery",,] = 0.535 #GaBi, per ton naphtha
ef["Methane",,] = 2.6 #kg/kg meth, taken from old cost caluclations, based on stochiometric combustion
#-> maybe better IPCC
ef["By_Products",,] = 0.623 #sum already, taken from excel, needs to be 1 in the other tables!
for (i in 1:5)
ef["Electrolyser", i,] = carbon_int
for (i in 1:5)
ef["CarbCapt(net)", i,] = (-1 + 1.47*carbon_int)
#captured co2 plus energy demand per co2 captured. (electricity + heat - waste_heat (normalized to co2))
emissions = flows*ef
knitr::opts_knit$set(root.dir = 'C:/Users/Lucia/Documents/Arbeit/PIK_MA/Paper/Paper_MA/LaTeX')
require(ggplot2)
require(data.table)
require(ggpubr)
require(knitr)
sum_emi = replace(emissions, is.na(emissions), 0) #replace na with 0 for summing
sum_emi = apply(sum_emi, c(2,3), sum)
esp_ocm = array(0L, dim=c(3,26), dimnames=list(c("OCM_EL", "OCM_NG", "OCM_HO"),
paste(carbon_int, "t_CO2/MWh")))
esp_eh = array(0L, dim=c(3,26), dimnames=list(c("EH_EL", "EH_NG", "EH_HO"),
paste(carbon_int, "t_CO2/MWh")))
esp_eh["EH_EL",] = sum_emi["SC",] - sum_emi["EH",]
esp_eh["EH_NG",] = sum_emi["NG",] - sum_emi["EH",]
esp_eh["EH_HO",] = sum_emi["HO",] - sum_emi["EH",]
esp_ocm["OCM_EL",] = sum_emi["SC", ] - sum_emi["OCM",]
esp_ocm["OCM_NG",] = sum_emi["NG", ] - sum_emi["OCM",]
esp_ocm["OCM_HO",] = sum_emi["HO", ] - sum_emi["OCM",]
esp_rel = array(0L, dim=c(6, 26), dimnames=list(c("OCM_EL", "OCM_NG", "OCM_HO", "EH_EL", "EH_NG", "EH_HO" ),
paste(carbon_int, "t_CO2/MWh")))
esp_rel["EH_EL",] = (esp_eh["EH_EL",]/sum_emi["SC",])
esp_rel["EH_NG",] = (esp_eh["EH_NG",]/sum_emi["NG",])
esp_rel["EH_HO",] = (esp_eh["EH_HO",]/sum_emi["HO",])
esp_rel["OCM_EL",] = (esp_ocm["OCM_EL",]/sum_emi["SC",])
esp_rel["OCM_NG",] = (esp_ocm["OCM_NG",]/sum_emi["NG",])
esp_rel["OCM_HO",] = (esp_ocm["OCM_HO",]/sum_emi["HO",])
theme = theme(legend.position="bottom",
legend.title=element_text(size=15),
legend.text=element_text(size=15),
plot.title=element_text(hjust=0.5, size=20),
axis.title.x=element_text(size=15),
axis.title.y=element_text(size=15),
axis.text.x=element_text(size=15, angle=90, hjust=1),
axis.text.y=element_text(size=15),
text=element_text(size = 20))
sc ="#8843B6"
eh="#2E8B57"
ocm = "#FF8C00"
ng = "#A400A4"
ho = "#0000FF"
vertDf<-data.frame(years=c(0.28,0.1,0.04),labels=c("2020","2030","2050"))
esp_ocm_gg = melt(esp_ocm)
esp_ocm_gg$Var2 = sub(" t_CO2/MWh", "", esp_ocm_gg$Var2)
esp_ocm_gg$Var2 = as.numeric(as.character(esp_ocm_gg$Var2))
plot_2a = ggplot(esp_ocm_gg, aes(x=Var2, y=value, col=Var1, shape=Var1, bg=Var1)) +
geom_hline(yintercept=0, size=0.1, col="gray") +
geom_vline(data=vertDf, aes(xintercept=years,linetype=labels),
size = 0.6, col="red", alpha=.6) +
geom_point(cex=2.5, stroke=.5, alpha=0.7) +
scale_color_manual(name="",
labels=c("OCM(Electricity)", "OCM(Natural Gas)", "OCM(Heating Oil)"),
values=c( "black", "black", "black"), guide=FALSE) +
scale_shape_manual(name="",
labels=c("OCM(Electricity)", "OCM(Natural Gas)", "OCM(Heating Oil)"),
values=c(24, 14, 2), guide=FALSE) +
scale_fill_manual(name="",
labels=c("OCM(Electricity)", "OCM(Natural Gas)", "OCM(Heating Oil)"),
values=c(ocm, NA, NA), guide=FALSE) +
xlab("") +
ylab("") +
theme_bw() + theme +
scale_linetype_manual(name="", values=c("2020"="solid","2030"="dashed","2050"="dotted"),
guide = guide_legend(nrows=3, ncol=1 )) +
scale_x_reverse(lim=c(0.4,0))
esp_eh_gg = melt(esp_eh)
esp_eh_gg$Var2 = sub(" t_CO2/MWh", "", esp_eh_gg$Var2)
esp_eh_gg$Var2 = as.numeric(as.character(esp_eh_gg$Var2))
plot_2b = ggplot(esp_eh_gg, aes(x=Var2, y=value, col=Var1, shape=Var1, bg=Var1)) +
geom_hline(yintercept=0, size=0.1, col="gray") +
geom_vline(data=vertDf, aes(xintercept=years,linetype=labels), size = 0.6,
col="red", alpha=.6) +
geom_point(cex=2.5, stroke=0.5, alpha=0.7) +
scale_color_manual(name="",
labels=c("EH (Electricity)", "EH (Natural Gas)", "EH (Heating Oil)"),
values=c("black", "black", "black"), guide=FALSE) +
scale_shape_manual(name="",
labels=c("EH (Electricity)", "EH (Natural Gas)", "EH (Heating Oil)"),
values=c(23, 9, 5)) +
scale_fill_manual(name="",
labels=c("EH (Electricity)", "EH (Natural Gas)", "EH (Heating Oil)"),
values=c(eh, NA, NA)) +
labs(x="", y = expression(" t"[CO2eq.]*"/ t"[Ethylene])) +
theme_bw() + theme +
theme(legend.position="none") +
scale_linetype_manual(name="", values=c("2020"="solid","2030"="dashed","2050"="dotted"), guide = guide_legend(
direction = "horizontal") ) +
scale_x_reverse(lim=c(0.4, 0)) + theme(plot.margin=unit(c(.1, .1, .1 , .5), "cm"))
esp_rel_gg = melt(esp_rel)
esp_rel_gg$Var2 = sub(" t_CO2/MWh", "", esp_rel_gg$Var2)
esp_rel_gg$Var2 = as.numeric(as.character(esp_rel_gg$Var2))
plot_2c = ggplot(esp_rel_gg, aes(x=Var2, y=value, col=Var1, shape=Var1, bg=Var1)) +
geom_hline(yintercept=0, size=0.1, col="gray") +
geom_vline(data=vertDf, aes(xintercept=years,linetype=labels), size = 0.6,
col="red", alpha=.6, show.legend = FALSE) +
geom_point(cex=2.5, stroke=.5, alpha=0.7) +
scale_color_manual(name="",
labels=c("EH (Electricity)", "EH (Natural Gas)", "EH (Heating Oil)",
"OCM (Electricity)", "OCM (Natural Gas)", "OCM (Heating Oil)"),
values=c("black", "black", "black", "black", "black", "black"),
guide=FALSE) +
scale_shape_manual(name="",
labels=c("EH (Electricity)", "EH (Natural Gas)", "EH (Heating Oil)",
"OCM (Electricity)", "OCM (Natural Gas)", "OCM (Heating Oil)"),
values=c(23, 9, 5, 24, 14, 2)) +
scale_fill_manual(name="",
labels=c( "EH (Electricity)", "EH (Natural Gas)", "EH (Heating Oil)",
"OCM (Electricity)", "OCM (Natural Gas)", "OCM (Heating Oil)"),
values=c(eh, NA, NA, ocm, NA, NA)) +
labs(x=expression("Carbon Intensity in t"[CO2]*"/MWh"[Electricity]), y="Relative ESP")+
theme_bw() + theme + guides(shape=guide_legend(nrows=3, ncol=2)) +
theme(plot.margin=unit(c(.1, .1, .1, .8), "cm")) +
scale_linetype_manual(name="", values=c("2020"="solid","2030"="dashed","2050"="dotted"), guide = guide_legend(
direction = "horizontal") ) +
scale_x_reverse(lim=c(0.4,0))
knitr::opts_knit$set(root.dir = 'C:/Users/Lucia/Documents/Arbeit/PIK_MA/Paper/Paper_MA/LaTeX')
require(ggplot2)
require(data.table)
require(ggpubr)
eol = array(0L, dim=c(3,3,3, 26),
dimnames=list(c("Cradle-to-Gate", "Recycling", "Incineration"),
c("SC", "EH", "OCM"),
c("PVC", "PE_bottle", "PE_foam"),
paste(carbon_int, "t_CO2/MWh")))
for (i in 1:3)
for (j in 1:3){
eol[i, "SC",j,] = sum_emi["SC",]
eol[i, "EH",j,] = sum_emi["EH",]
eol[i, "OCM",j,] = sum_emi["OCM",]}
#fill incineration and recycling
for (i in 1:3)
for (j in 1:3)
eol["Incineration",i,j,] = eol["Incineration",i,j,] + 3.13 - 1.3*carbon_int #tCO2/tEthylene
for (i in 1:3)
for (j in 1:3)
eol["Recycling",i,j,] = eol["Recycling",i,j,] + 0.569*carbon_int #tCO2/tEthylene
#fill conversion per product
#products_total (Gabi)
pvc_tot = 1.97 * 2.23
pe_bottle_tot = 3.31
pe_foam_tot = 2.64
#conversion share (percentages from nature cc plastics paper (Zheng et al))
pvc_conv = 0.22*pvc_tot
pe_bottle_conv = 0.36*pe_bottle_tot
pe_foam_conv = 0.36*pe_foam_tot
pe = 1.8*(1-0.8)
pe_bottle_conv = pe + pe_bottle_conv
pe_foam_conv = pe + pe_foam_conv
for (i in 1:3){
eol["Recycling",i,"PVC",] = eol["Recycling",i,"PVC",]  + pvc_conv
eol["Recycling",i,"PE_bottle",] = eol["Recycling",i,"PE_bottle",]  + pe_bottle_conv
eol["Recycling",i,"PE_foam",] = eol["Recycling",i,"PE_foam",]  + pe_foam_conv
eol["Incineration",i,"PVC",] = eol["Incineration",i,"PVC",]  + pvc_conv
eol["Incineration",i,"PE_bottle",] = eol["Incineration",i,"PE_bottle",]  + pe_bottle_conv
eol["Incineration",i,"PE_foam",] = eol["Incineration",i,"PE_foam",]  + pe_foam_conv}
eol_sc = eol[,"SC",,]
eol_eh = eol[,"EH",,]
eol_ocm = eol[,"OCM",,]
ribbon = data.frame("Var4"=carbon_int, "OCM_min", "EH_min", "SC_min", "OCM_max", "EH_max", "SC_max")
for (i in 1:length(carbon_int)){
ribbon[i,"OCM_min"] = min(eol_ocm["Recycling",,i])
ribbon[i,"OCM_max"] = max(eol_ocm["Incineration",,i])
ribbon[i,"EH_min"] = min(eol_eh["Recycling",,i])
ribbon[i,"EH_max"] = max(eol_eh["Incineration",,i])
ribbon[i,"SC_min"] = min(eol_sc["Recycling",,i])
ribbon[i,"SC_max"] = max(eol_sc["Incineration",,i])
}
ribbon_new = data.frame("Var4"=ribbon$Var4, "OCM_max"=ribbon$OCM_max, "OCM_min"=ribbon$OCM_min,
"SC_max"=ribbon$SC_max, "SC_min"=ribbon$SC_min,
"EH_max"=ribbon$EH_max, "EH_min"=ribbon$EH_min)
minn = melt(ribbon_new, measure.vars=c("OCM_min", "SC_min", "EH_min"))
maxx = melt(ribbon_new, measure.vars=c("OCM_max", "SC_max", "EH_max"))
#match names
ribbon_gg = data.frame("Var4" = minn$Var4, "Var2" = minn$variable, "min" = minn$value, "max" = maxx$value )
#rename factors
levels(ribbon_gg[,2])[levels(ribbon_gg[,2])=="OCM_min"] ="OCM"
levels(ribbon_gg[,2])[levels(ribbon_gg[,2])=="SC_min"] ="SC"
levels(ribbon_gg[,2])[levels(ribbon_gg[,2])=="EH_min"] ="EH"
theme = theme(legend.position="bottom",
legend.title=element_text(size=15),
legend.text=element_text(size=15),
plot.title=element_text(hjust=0.5, size=20),
axis.title.x=element_text(size=15),
axis.title.y=element_text(size=15),
axis.text.x=element_text(size=15, angle=90, hjust=1),
axis.text.y=element_text(size=15),
text=element_text(size = 20))
sc ="#8843B6"
eh="#2E8B57"
ocm = "#FF8C00"
ng = "#A400A4"
ho = "#0000FF"
vertDf<-data.frame(years=c(0.28,0.1,0.04),labels=c("2020","2030","2050"))
#*legend for lines not added here but in different plot to be able to control it better*
eol_gg = melt(eol)
eol_gg$Var4 = sub(" t_CO2/MWh", "", eol_gg$Var4)
eol_gg$Var4 = as.numeric(as.character(eol_gg$Var4))
plot_3 = ggplot(eol_gg, aes(x=Var4, fill=Var2, shape=Var2)) +
geom_hline(yintercept=0, size=0.1, col="gray") +
geom_vline(data=vertDf,aes(xintercept=years,linetype=labels),
size = 0.6, col="red", alpha=.6, show.legend = FALSE) +
facet_wrap(~Var2) +
geom_ribbon(data=ribbon_gg, aes(ymin=min, ymax=max), alpha=.4, show.legend=FALSE) +
geom_point(data = subset(eol_gg, Var2=="SC" & Var1 == "Recycling"),
aes(y=value),col=sc, alpha=.7,  stroke=.5, shape=2) +
geom_point(data = subset(eol_gg, Var2=="SC" & Var1 == "Incineration"),
aes(y=value),col=sc, alpha=.7,  stroke=.5, shape=6) +
geom_point(data = subset(eol_gg, Var2=="EH" & Var1 == "Recycling"),
aes(y=value),col=eh, alpha=.7,  stroke=.5, shape=2) +
geom_point(data = subset(eol_gg, Var2=="EH" & Var1 == "Incineration"),
aes(y=value),col=eh, alpha=.7,  stroke=.5, shape=6) +
geom_point(data = subset(eol_gg, Var2=="OCM" & Var1 == "Recycling"),
aes(y=value),col=ocm, alpha=.7,  stroke=.5, shape=2) +
geom_point(data = subset(eol_gg, Var2=="OCM" & Var1 == "Incineration"),
aes(y=value),col=ocm, alpha=.7,  stroke=.5, shape=6) +
geom_point(data = subset(eol_gg, Var2=="SC" & Var1=="Cradle-to-Gate" ),
aes(y=value),col="black", bg=sc, alpha=.7,  stroke=.5, shape=21) +
geom_point(data = subset(eol_gg, Var2=="EH" & Var1=="Cradle-to-Gate" ),
aes(y=value),col="black", bg=eh, alpha=.7,  stroke=.5, shape=23) +
geom_point(data = subset(eol_gg, Var2=="OCM" & Var1=="Cradle-to-Gate" ),
aes(y=value),col="black", bg=ocm, alpha=.7,  stroke=.5, shape=24) +
scale_shape_manual(name="", values=c(24, 6, 2),
labels=c("Cradle-to-Gate", "Recycling", "Incineration")) +
scale_fill_manual(name="", values=c(ocm, sc, eh), guide=FALSE) +
labs(y=expression("t"[CO2]*"/t"[Ethylene]), x="" )+
scale_y_continuous(limits=c(-4, 18)) +
theme_bw() + theme + theme(plot.margin=unit(c(.1, .1, .1, .5), "cm")) +
scale_linetype_manual(name="",
values=c("2020"="solid","2030"="dashed","2050"="dotted"),
guide = guide_legend(direction = "horizontal") ) +
scale_x_reverse(lim=c(0.4,0),  breaks =seq(0, .4, 0.1))
plot_3l = ggplot(eol_gg, aes(x=Var4, fill=Var2, shape=Var2)) +
geom_hline(yintercept=0, size=0.1, col="gray") +
geom_vline(data=vertDf,aes(xintercept=years,linetype=labels),
size = 0.4, col="red", alpha=.6, show.legend = FALSE) +
facet_wrap(~Var2) +
geom_ribbon(data=ribbon_gg, aes(ymin=min, ymax=max), alpha=.4, show.legend=FALSE) +
geom_point(data = subset(eol_gg, Var2=="SC" & Var1 != "Cradle-to-Gate"),
aes(y=value),col=sc, alpha=.7,  stroke=.5, shape=1) +
geom_point(data = subset(eol_gg, Var2=="SC" & Var1=="Cradle-to-Gate" ),
aes(y=value),col="black", bg=sc, alpha=.7,  stroke=.5, shape=21) +
geom_point(data = subset(eol_gg, Var2=="EH" & Var1 != "Cradle-to-Gate"),
aes(y=value),col=eh, alpha=.7,  stroke=.5) +
geom_point(data = subset(eol_gg, Var2=="EH" & Var1=="Cradle-to-Gate" ),
aes(y=value),col="black", bg=eh, alpha=.7,  stroke=.5, shape=23) +
geom_point(data = subset(eol_gg, Var2=="OCM" & Var1 != "Cradle-to-Gate"),
aes(y=value),col=ocm, alpha=.7,  stroke=.5) +
geom_point(data = subset(eol_gg, Var2=="OCM" & Var1=="Cradle-to-Gate" ),
aes(y=value),col="black", bg=ocm, alpha=.7,  stroke=.5, shape=24) +
scale_shape_manual(name="", values=c(24, 2, 6),
labels=c("Cradle-to-Gate", "Recycling", "Incineration")) +
scale_fill_manual(name="", values=c(ocm, sc, eh), guide=FALSE) +
labs(y=expression("t"[CO2]*"/t"[Ethylene]), x="" )+
guides(shape = guide_legend(reverse = TRUE, nrow=3, ncol=1,
override.aes = list(col="black", bg="black"))) +
scale_y_continuous(limits=c(-4, 18)) +
theme_bw() + theme + theme(plot.margin=unit(c(.1, .1, .1, .5), "cm")) +
scale_linetype_manual(name="",
values=c("2020"="solid","2030"="dashed","2050"="dotted"),
guide = guide_legend(direction = "horizontal") ) +
scale_x_reverse(lim=c(0.4,0),  breaks =seq(0, .4, 0.1))
knitr::opts_knit$set(root.dir = 'C:/Users/Lucia/Documents/Arbeit/PIK_MA/Paper/Paper_MA/LaTeX')
require(gridExtra)
leg_2a = get_legend(plot_2a)
leg_2a = as_ggplot(leg_2a) + theme(plot.margin = unit(c(.1, 4, .1, .1), "cm"))
leg_2c = get_legend(plot_2c)
leg_2c = as_ggplot(leg_2c) + theme(plot.margin = unit(c(.1, 4, .1, .1), "cm"))
leg_3 = get_legend(plot_3l)
leg_3 = as_ggplot(leg_3) + theme(plot.margin = unit(c(.1, .1, .1, .1), "cm"))
plot_2d = ggarrange(plot_2b, plot_2a,ncol=2, nrow=1, legend = "none")
plot_2 = ggarrange(plot_2d, plot_2c, ncol=1, nrow=2,
labels=c("B","C"))
plot_ = ggarrange(plot_3, plot_2d, plot_2c, ncol=1, nrow=3, legend="none",
labels=c("A","B", "C"))
leg = ggarrange(leg_3, leg_2a, leg_2c, ncol=3, nrow=1)
plot = as_ggplot(grid.arrange(arrangeGrob(plot_, ncol=1, nrow=1),
arrangeGrob(leg, ncol=1, nrow=1),
heights=c(3,.5) ))
plot
head(esp_rel_gg)
plot_2c
plot_2b
plot_2c
plot_2b
plot_2a
plot_2c = ggplot(esp_rel_gg, aes(x=Var2, y=value, col=Var1, shape=Var1, bg=Var1)) +
geom_hline(yintercept=0, size=0.1, col="gray") +
geom_vline(data=vertDf, aes(xintercept=years,linetype=labels), size = 0.6,
col="red", alpha=.6, show.legend = FALSE) +
geom_point(cex=2.5, stroke=.5, alpha=0.7) +
scale_color_manual(name="",
labels=c("EH (Electricity)", "EH (Natural Gas)", "EH (Heating Oil)",
"OCM (Electricity)", "OCM (Natural Gas)", "OCM (Heating Oil)"),
values=c("black", "black", "black", "black", "black", "black"),
guide=FALSE) +
scale_shape_manual(name="",
labels=c("EH (Electricity)", "EH (Natural Gas)", "EH (Heating Oil)",
"OCM (Electricity)", "OCM (Natural Gas)", "OCM (Heating Oil)"),
values=c(23, 9, 5, 24, 14, 2)) +
scale_fill_manual(name="",
labels=c( "EH (Electricity)", "EH (Natural Gas)", "EH (Heating Oil)",
"OCM (Electricity)", "OCM (Natural Gas)", "OCM (Heating Oil)"),
values=c(ocm, NA, NA, eh, NA, NA)) +
labs(x=expression("Carbon Intensity in t"[CO2]*"/MWh"[Electricity]), y="Relative ESP")+
theme_bw() + theme + guides(shape=guide_legend(nrows=3, ncol=2)) +
theme(plot.margin=unit(c(.1, .1, .1, .8), "cm")) +
scale_linetype_manual(name="", values=c("2020"="solid","2030"="dashed","2050"="dotted"), guide = guide_legend(
direction = "horizontal") ) +
scale_x_reverse(lim=c(0.4,0))
plot_2c
plot_2c = ggplot(esp_rel_gg, aes(x=Var2, y=value, col=Var1, shape=Var1, bg=Var1)) +
geom_hline(yintercept=0, size=0.1, col="gray") +
geom_vline(data=vertDf, aes(xintercept=years,linetype=labels), size = 0.6,
col="red", alpha=.6, show.legend = FALSE) +
geom_point(cex=2.5, stroke=.5, alpha=0.7) +
scale_color_manual(name="",
labels=c("EH (Electricity)", "EH (Natural Gas)", "EH (Heating Oil)",
"OCM (Electricity)", "OCM (Natural Gas)", "OCM (Heating Oil)"),
values=c("black", "black", "black", "black", "black", "black"),
guide=FALSE) +
scale_shape_manual(name="",
labels=c("EH (Electricity)", "EH (Natural Gas)", "EH (Heating Oil)",
"OCM (Electricity)", "OCM (Natural Gas)", "OCM (Heating Oil)"),
values=c(23, 9, 5, 24, 14, 2)) +
scale_fill_manual(name="",
labels=c("OCM (Electricity)", "OCM (Natural Gas)", "OCM (Heating Oil)",
"EH (Electricity)", "EH (Natural Gas)", "EH (Heating Oil)"
),
values=c(ocm, NA, NA, eh, NA, NA)) +
labs(x=expression("Carbon Intensity in t"[CO2]*"/MWh"[Electricity]), y="Relative ESP")+
theme_bw() + theme + guides(shape=guide_legend(nrows=3, ncol=2)) +
theme(plot.margin=unit(c(.1, .1, .1, .8), "cm")) +
scale_linetype_manual(name="", values=c("2020"="solid","2030"="dashed","2050"="dotted"), guide = guide_legend(
direction = "horizontal") ) +
scale_x_reverse(lim=c(0.4,0))
plot_2c
plot_2c = ggplot(esp_rel_gg, aes(x=Var2, y=value, col=Var1, shape=Var1, bg=Var1)) +
geom_hline(yintercept=0, size=0.1, col="gray") +
geom_vline(data=vertDf, aes(xintercept=years,linetype=labels), size = 0.6,
col="red", alpha=.6, show.legend = FALSE) +
geom_point(cex=2.5, stroke=.5, alpha=0.7) +
scale_color_manual(name="",
labels=c("OCM (Electricity)", "OCM (Natural Gas)", "OCM (Heating Oil)",
"EH (Electricity)", "EH (Natural Gas)", "EH (Heating Oil)"),
values=c("black", "black", "black", "black", "black", "black"),
guide=FALSE) +
scale_shape_manual(name="",
labels=c("OCM (Electricity)", "OCM (Natural Gas)", "OCM (Heating Oil)",
"EH (Electricity)", "EH (Natural Gas)", "EH (Heating Oil)"),
values=c(24, 14, 2, 23, 9, 5)) +
scale_fill_manual(name="",
labels=c("OCM (Electricity)", "OCM (Natural Gas)", "OCM (Heating Oil)",
"EH (Electricity)", "EH (Natural Gas)", "EH (Heating Oil)"
),
values=c(ocm, NA, NA, eh, NA, NA)) +
labs(x=expression("Carbon Intensity in t"[CO2]*"/MWh"[Electricity]), y="Relative ESP")+
theme_bw() + theme + guides(shape=guide_legend(nrows=3, ncol=2)) +
theme(plot.margin=unit(c(.1, .1, .1, .8), "cm")) +
scale_linetype_manual(name="", values=c("2020"="solid","2030"="dashed","2050"="dotted"), guide = guide_legend(
direction = "horizontal") ) +
scale_x_reverse(lim=c(0.4,0))
plot_2c
leg_2a = get_legend(plot_2a)
leg_2a = as_ggplot(leg_2a) + theme(plot.margin = unit(c(.1, 4, .1, .1), "cm"))
leg_2c = get_legend(plot_2c)
leg_2c = as_ggplot(leg_2c) + theme(plot.margin = unit(c(.1, 4, .1, .1), "cm"))
leg_3 = get_legend(plot_3l)
leg_3 = as_ggplot(leg_3) + theme(plot.margin = unit(c(.1, .1, .1, .1), "cm"))
plot_2d = ggarrange(plot_2b, plot_2a,ncol=2, nrow=1, legend = "none")
plot_2 = ggarrange(plot_2d, plot_2c, ncol=1, nrow=2,
labels=c("B","C"))
plot_ = ggarrange(plot_3, plot_2d, plot_2c, ncol=1, nrow=3, legend="none",
labels=c("A","B", "C"))
leg = ggarrange(leg_3, leg_2a, leg_2c, ncol=3, nrow=1)
plot = as_ggplot(grid.arrange(arrangeGrob(plot_, ncol=1, nrow=1),
arrangeGrob(leg, ncol=1, nrow=1),
heights=c(3,.5) ))
plot
pdf("figures/plot_3.pdf", height=10, width=8.6)
getwd()
pdf("figures/plot_3.pdf", height=10, width=8.6)
pdf("./figures/plot_3.pdf", height=10, width=8.6)
pdf("plot_3.pdf", height=10, width=8.6)
plot
dev.off()
head(sum_emi["SC",])
head(sum_emi["NG",])
head(esp_rel["EH_EL",])
head(esp_rel["EH_NG",])
head(esp_eh["EL",])
head(esp_eh["EH_EL",])
head(esp_rel["EH_NG",])
head(esp_eh["EH_NG",])
esp_ocm["OCM_EL",]
head(esp_ocm["OCM_EL",])
head(esp_ocm["OCM_NG",])
head(esp_rel["OCM_EL",])
head(esp_rel["OCM_NG",])
head(esp_eh["EH_EL",])
head(esp_eh["EH_NG",])
head(esp_rel["EH_EL",])
head(esp_rel["EH_NG",])
head(sum_emi["SC"])
head(dsum_emi["SC",])
head(sum_emi["SC",])
head(sum_emi["NG",])
